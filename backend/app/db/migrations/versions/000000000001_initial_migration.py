"""Initial migration

Revision ID: 000000000001
Revises: 
Create Date: 2025-07-10 12:00:00.000000

"""
import sqlalchemy as sa
from alembic import op

# revision identifiers, used by Alembic.
revision = '000000000001'
down_revision = None
branch_labels = None
depends_on = None


def upgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table(
        'users',
        sa.Column('id', sa.String(), nullable=False),
        sa.Column('name', sa.String(), nullable=False),
        sa.Column('imageUrl', sa.String(), nullable=False),
        sa.Column('email', sa.String(), nullable=False),
        sa.Column('createdAt', sa.DateTime(), nullable=True),
        sa.Column('updatedAt', sa.DateTime(), nullable=True),
        sa.PrimaryKeyConstraint('id'),
        sa.UniqueConstraint('email')
    )
    op.create_index(op.f('ix_users_id'), 'users', ['id'], unique=False)

    op.create_table(
        'organizations',
        sa.Column('id', sa.String(), nullable=False),
        sa.Column('name', sa.String(), nullable=False),
        sa.Column('imageUrl', sa.String(), nullable=True),
        sa.Column('createdAt', sa.DateTime(), nullable=True),
        sa.Column('updatedAt', sa.DateTime(), nullable=True),
        sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_organizations_id'), 'organizations', ['id'], unique=False)

    op.create_table(
        'job_listings',
        sa.Column('id', sa.String(), nullable=False),
        sa.Column('organizationId', sa.String(), nullable=False),
        sa.Column('title', sa.String(), nullable=False),
        sa.Column('description', sa.String(), nullable=False),
        sa.Column('wage', sa.Integer(), nullable=True),
        sa.Column('wageInterval', sa.Enum('hourly', 'yearly', name='wage_interval_enum'), nullable=True),
        sa.Column('stateAbbreviation', sa.String(), nullable=True),
        sa.Column('city', sa.String(), nullable=True),
        sa.Column('isFeatured', sa.Boolean(), nullable=False),
        sa.Column('locationRequirement', sa.Enum('in-office', 'hybrid', 'remote', name='location_requirement_enum'),
                  nullable=False),
        sa.Column('experienceLevel', sa.Enum('junior', 'mid-level', 'senior', name='experience_level_enum'),
                  nullable=False),
        sa.Column('status', sa.Enum('draft', 'published', 'delisted', name='job_listing_status_enum'), nullable=False),
        sa.Column('type', sa.Enum('internship', 'part-time', 'full-time', name='job_listing_type_enum'),
                  nullable=False),
        sa.Column('postedAt', sa.DateTime(timezone=True), nullable=True),
        sa.Column('createdAt', sa.DateTime(), nullable=True),
        sa.Column('updatedAt', sa.DateTime(), nullable=True),
        sa.ForeignKeyConstraint(['organizationId'], ['organizations.id'], ondelete='CASCADE'),
        sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_job_listings_id'), 'job_listings', ['id'], unique=False)
    op.create_index(op.f('ix_job_listings_stateAbbreviation'), 'job_listings', ['stateAbbreviation'], unique=False)

    op.create_table(
        'organization_user_settings',
        sa.Column('userId', sa.String(), nullable=False),
        sa.Column('organizationId', sa.String(), nullable=False),
        sa.Column('newApplicationEmailNotifications', sa.Boolean(), nullable=False),
        sa.Column('minimumRating', sa.Integer(), nullable=True),
        sa.Column('createdAt', sa.DateTime(), nullable=True),
        sa.Column('updatedAt', sa.DateTime(), nullable=True),
        sa.ForeignKeyConstraint(['organizationId'], ['organizations.id'], ),
        sa.ForeignKeyConstraint(['userId'], ['users.id'], ),
        sa.PrimaryKeyConstraint('userId', 'organizationId')
    )

    op.create_table(
        'user_notification_settings',
        sa.Column('userId', sa.String(), nullable=False),
        sa.Column('newJobEmailNotifications', sa.Boolean(), nullable=False),
        sa.Column('aiPrompt', sa.String(), nullable=True),
        sa.Column('createdAt', sa.DateTime(), nullable=True),
        sa.Column('updatedAt', sa.DateTime(), nullable=True),
        sa.ForeignKeyConstraint(['userId'], ['users.id'], ),
        sa.PrimaryKeyConstraint('userId')
    )

    op.create_table(
        'user_resumes',
        sa.Column('userId', sa.String(), nullable=False),
        sa.Column('resumeFileUrl', sa.String(), nullable=False),
        sa.Column('resumeFileKey', sa.String(), nullable=False),
        sa.Column('aiSummary', sa.String(), nullable=True),
        sa.Column('createdAt', sa.DateTime(), nullable=True),
        sa.Column('updatedAt', sa.DateTime(), nullable=True),
        sa.ForeignKeyConstraint(['userId'], ['users.id'], ),
        sa.PrimaryKeyConstraint('userId')
    )

    op.create_table(
        'job_listing_applications',
        sa.Column('jobListingId', sa.String(), nullable=False),
        sa.Column('userId', sa.String(), nullable=False),
        sa.Column('coverLetter', sa.Text(), nullable=True),
        sa.Column('rating', sa.Integer(), nullable=True),
        sa.Column('stage',
                  sa.Enum('denied', 'applied', 'interested', 'interviewed', 'hired', name='application_stage_enum'),
                  nullable=False),
        sa.Column('createdAt', sa.DateTime(), nullable=True),
        sa.Column('updatedAt', sa.DateTime(), nullable=True),
        sa.ForeignKeyConstraint(['jobListingId'], ['job_listings.id'], ondelete='CASCADE'),
        sa.ForeignKeyConstraint(['userId'], ['users.id'], ondelete='CASCADE'),
        sa.PrimaryKeyConstraint('jobListingId', 'userId')
    )
    # ### end Alembic commands ###


def downgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_table('job_listing_applications')
    op.drop_table('user_resumes')
    op.drop_table('user_notification_settings')
    op.drop_table('organization_user_settings')
    op.drop_index(op.f('ix_job_listings_stateAbbreviation'), table_name='job_listings')
    op.drop_index(op.f('ix_job_listings_id'), table_name='job_listings')
    op.drop_table('job_listings')
    op.drop_index(op.f('ix_organizations_id'), table_name='organizations')
    op.drop_table('organizations')
    op.drop_index(op.f('ix_users_id'), table_name='users')
    op.drop_table('users')
    # ### end Alembic commands ###
